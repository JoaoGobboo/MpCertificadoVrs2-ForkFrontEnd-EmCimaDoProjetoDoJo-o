// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MpCertificadoVrs2.data;

#nullable disable

namespace MpCertificadoVrs2.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231008193307_vrs2Ed01")]
    partial class vrs2Ed01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("MpCertificadoVrs2.Models.AcCertificadoraTeste", b =>
                {
                    b.Property<int>("IdCertificadora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeCertificadora")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumeroInmetro")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdCertificadora");

                    b.ToTable("AcCertificadoraTestes");
                });

            modelBuilder.Entity("MpCertificadoVrs2.Models.CadastroPagamento", b =>
                {
                    b.Property<int>("IdCartao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BancoEmissor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BandeiraCartao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CodigoSeguranca")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CpfTitular")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EnderecoFaturamento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeTitular")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumeroCartao")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TelefoneTitular")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ValidadeCartao")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdCartao");

                    b.ToTable("CadastroPagamentos");
                });

            modelBuilder.Entity("MpCertificadoVrs2.Models.Carrinho", b =>
                {
                    b.Property<int>("IdCarrinho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CertificadoAnuncioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdCarrinho");

                    b.HasIndex("CertificadoAnuncioId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Carrinhos");
                });

            modelBuilder.Entity("MpCertificadoVrs2.Models.CertificadoAnuncio", b =>
                {
                    b.Property<int>("IdCertificadoA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IdFabricante")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TempoDeValidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoDeCliente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoDeDispositivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoDeEmissao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Valor")
                        .HasColumnType("REAL");

                    b.HasKey("IdCertificadoA");

                    b.ToTable("CertificadoAnuncios");
                });

            modelBuilder.Entity("MpCertificadoVrs2.Models.CertificadoProduto", b =>
                {
                    b.Property<int>("IdCertificadoP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CnpjAc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CodidoRastreio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Criptografia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DocumentoCliente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Linguagem")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoCertificado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoDispositivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ValidacaoVideo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdCertificadoP");

                    b.ToTable("CertificadoProdutos");
                });

            modelBuilder.Entity("MpCertificadoVrs2.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoCliente")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clientes");

                    b.HasDiscriminator<string>("TipoCliente").HasValue("Cliente");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MpCertificadoVrs2.Models.PessoaFisica", b =>
                {
                    b.HasBaseType("MpCertificadoVrs2.Models.Cliente");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Idade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Profissao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("PessoaFisica");
                });

            modelBuilder.Entity("MpCertificadoVrs2.Models.PessoaJuridica", b =>
                {
                    b.HasBaseType("MpCertificadoVrs2.Models.Cliente");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("PessoaJuridica");
                });

            modelBuilder.Entity("MpCertificadoVrs2.Models.Carrinho", b =>
                {
                    b.HasOne("MpCertificadoVrs2.Models.CertificadoAnuncio", "CertificadoAnuncio")
                        .WithMany("Carrinhos")
                        .HasForeignKey("CertificadoAnuncioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MpCertificadoVrs2.Models.Cliente", "Cliente")
                        .WithMany("Carrinhos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CertificadoAnuncio");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("MpCertificadoVrs2.Models.CertificadoAnuncio", b =>
                {
                    b.Navigation("Carrinhos");
                });

            modelBuilder.Entity("MpCertificadoVrs2.Models.Cliente", b =>
                {
                    b.Navigation("Carrinhos");
                });
#pragma warning restore 612, 618
        }
    }
}
